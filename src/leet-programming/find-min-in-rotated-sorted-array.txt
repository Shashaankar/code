/**
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.

Show Company Tags
Show Tags
Show Similar Problems

**/


#define MIN(_a,_b) ( (_a > _b) ? (_b) : (_a))

int findMin(int* arr, int n) {
    
    if (!arr) {
        return 0;
    }
    
    int left, right, mid, min;
    min = INT_MAX;
    left = 0;
    right = n-1;
    
    while (left <= right) {
        
        mid = (left+right)/2;
        //printf("left=%d,right=%d\n", left, right);
        min = MIN(arr[mid], min);
        
        if (arr[mid] > arr[right]) {
            left = mid+1;
        } else {
            right = mid-1;
        }
    }
    
    return min;
    
}