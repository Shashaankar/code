"""
Given a binary search tree and a node in it, find the in-order successor of that node in the BST.

Note: If the given node has no in-order successor in the tree, return null.
"""

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    
    def getMinNode(self, root):
        
        min_node = root
        while root != None:
            min_node = root
            root = root.left
    
        return min_node
    
    def inorderSuccessor(self, root, p):
        """
        :type root: TreeNode
        :type p: TreeNode
        :rtype: TreeNode
        """
        
        if root == None or p == None:
            return None
            
        if p.right != None:
            return self.getMinNode(p.right)
        
        succ_node = None
        while root != None:
            if p.val < root.val:
                succ_node = root
                root = root.left
            else:
                root = root.right
        
        return succ_node
            
            
            
            
            
            
            
            
            
            