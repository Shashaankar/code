"""
Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 231 - 1.

For example,
123 -> "One Hundred Twenty Three"
12345 -> "Twelve Thousand Three Hundred Forty Five"
1234567 -> "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
Hint:

Did you see a pattern in dividing the number into chunk of words? For example, 123 and 123000.
"""

class Solution(object):
    
    def twoDigitsProc(self, digits, lookup):
        if digits in lookup:
            return lookup[digits]
        return lookup[(digits/10)*10] + " " + lookup[digits%10]
    
    def threeDigitsProc(self, threedigits, lookup, unit):
        
        result = []
        
        if threedigits/100:
            result.append(lookup[threedigits/100] + " Hundred")
        
        
        twodigits = threedigits%100
        
        if twodigits:
            print "DEBUG twodigits = %s" % (twodigits)
            result.append(self.twoDigitsProc(twodigits, lookup))    
        if unit != "":
            result.append(unit)
        
        print "DEBUG result = %s" % (result)    
        return " ".join(result)
    
    
    def numberToWords(self, num):
        """
        :type num: int
        :rtype: str
        """
        
        if num == 0:
            return "Zero"
            
        lookup = {0: "Zero", 1:"One", 2: "Two", 3: "Three", 4: "Four", \
                  5: "Five", 6: "Six", 7: "Seven", 8: "Eight", 9: "Nine", \
                  10: "Ten", 11: "Eleven", 12: "Twelve", 13: "Thirteen", 14: "Fourteen", \
                  15: "Fifteen", 16: "Sixteen", 17: "Seventeen", 18: "Eighteen", 19: "Nineteen", \
                  20: "Twenty", 30: "Thirty", 40: "Forty", 50: "Fifty", 60: "Sixty", \
                  70: "Seventy", 80: "Eighty", 90: "Ninety"}
        unit = ["", "Thousand", "Million", "Billion"]
        
        ret_list = []
        i = 0
        
        while num:
            threedigits = num%1000
            
            print "DEBUG threedigits = %s" % (threedigits)
            if threedigits:
                ret_list.append(self.threeDigitsProc(threedigits, lookup, unit[i]))
            
            num = num/1000
            i += 1
            
            
        return " ".join(ret_list[::-1])
                
                
        