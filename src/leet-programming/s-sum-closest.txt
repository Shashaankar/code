"""
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
Show Company Tags
Show Tags
Show Similar Problems

"""


class Solution(object):
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
            
        nums = sorted(nums)
        #nums.sort()
        
        cur_sum = 0
        n = len(nums)
        
        cur_sum = nums[0] + nums[1] + nums[2]
        for i in xrange(0, n-2):
            left = i+1
            right = n-1
            
            while left < right:
                run_sum = nums[i] + nums[left] + nums[right]
                if abs(target - cur_sum) > abs(target - run_sum):
                    cur_sum = run_sum
                if run_sum > target:
                    right -= 1
                elif run_sum < target:
                    left += 1
                else:
                    return target
                
        
        return cur_sum
            
            
            
            
            
            