"""
Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note: The solution set must not contain duplicate quadruplets.

For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.

A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]
"""

class Solution(object):
    def fourSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        ret_list = []
        
        if nums  == None or len(nums) <= 3 or target == None:
            return ret_list
            
        i,j,k,l = 0,0,0,0
        nums = sorted(nums)
        n = len(nums)
        
        while i < n-3:
            # make sure we are not considering a number two times for processing
            if i == 0 or (i > 0 and nums[i] != nums[i-1]):
                j = i+1
                while j < n-2:
                    k,l = j+1, n-1
                    while k < l:
                        cur_sum = nums[i] + nums[j] + nums[k] + nums[l]
                        
                        if cur_sum < target:
                            k += 1
                        elif cur_sum > target:
                            l -= 1
                        else:
                            ret_list.append([nums[i], nums[j], nums[k], nums[l]])
                            k += 1
                            l -= 1
                            
                            while k < l and nums[k] == nums[k-1]:
                                k += 1
                            while k < l and nums[l] == nums[l+1]:
                                l -= 1
                                
                                
                    # Increment index j and make sure we are not considering same number again
                    j += 1
                    while j < n-2 and nums[j] == nums[j-1]:
                        j += 1
                        
            # Increment index i
            i += 1
                            
        return ret_list
